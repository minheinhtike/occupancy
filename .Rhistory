newdata = data.frame(site =1),
type = "state")
# Load covariate data
Site_Covariates <- crossbill[,c("ele", "forest")]
obsCovs=list(date=crossbill[,c("date991", "date992", "date993")])
# Build a new unmarkedFramOccu
umf <- unmarkedFrameOccu(
y=Detection_History,
siteCovs=Site_Covariates,
obsCovs=obsCovs)
#sc <- scale(siteCovs(umf))
#siteCovs(umf) <- sc
head(umf)
summary(umf)
occu.m1 <- occu(formula = ~date # detection formula first
~forest + ele, # occupancy formula second,
data = umf)
# Summarize
summary(occu.m1)
nd <- data.frame (scale(crossbill[,c("ele", "forest")]))
E.psi <- predict(occu.m1, type="state", newdata=nd, appendData=TRUE)
predicted_df <- data.frame(predicted = E.psi$Predicted,lower = E.psi$lower, upper= E.psi$upper, (crossbill[,c("ele", "forest")]))
plot(predicted_df$ele, predicted_df$predicted)
plot(predicted_df$forest, predicted_df$predicted)
p1 <- ggplot(predicted_df, aes(ele, predicted)) +
geom_point(alpha = 0.3, colour = "red")+
geom_smooth(span = 3)+
ggtitle("Species' Prefered Elevation") +
ylim(0, 1)+
xlab("Elevation (m)")+
ylab("Occupancy (pi)")
p2 <- ggplot(predicted_df, aes(forest, predicted)) +
geom_point(alpha = 0.3, colour = "red")+
geom_smooth(span = 1)+
ggtitle("Species' Prefered Forest Cover") +
ylim(0, 1)+
xlab("Percentage of Forest cover(%)")+
ylab("Occupancy (pi)")
grid.arrange(p1, p2)
E.psi <- predict(occu.m1, type="state", newdata=nd, appendData=TRUE)
plot(E.psi$forest, E.psi$predicted)
plot(E.psi$ele, E.psi$predicted)
predicted_df <- data.frame(predicted = E.psi$Predicted,lower = E.psi$lower, upper= E.psi$upper, (crossbill[,c("ele", "forest")]))
plot(predicted_df$ele, predicted_df$predicted)
plot(predicted_df$forest, predicted_df$predicted)
p1 <- ggplot(predicted_df, aes(ele, predicted)) +
geom_point(alpha = 0.3, colour = "red")+
geom_smooth(span = 3)+
ggtitle("Species' Prefered Elevation") +
ylim(0, 1)+
xlab("Elevation (m)")+
ylab("Occupancy (pi)")
p2 <- ggplot(predicted_df, aes(forest, predicted)) +
geom_point(alpha = 0.3, colour = "red")+
geom_smooth(span = 1)+
ggtitle("Species' Prefered Forest Cover") +
ylim(0, 1)+
xlab("Percentage of Forest cover(%)")+
ylab("Occupancy (pi)")
grid.arrange(p1, p2)
sc <- scale(siteCovs(umf))
siteCovs(umf) <- sc
head(umf)
summary(umf)
occu.m1 <- occu(formula = ~date # detection formula first
~forest + ele, # occupancy formula second,
data = umf)
# Summarize
summary(occu.m1)
nd <- data.frame (scale(crossbill[,c("ele", "forest")]))
E.psi <- predict(occu.m1, type="state", newdata=nd, appendData=TRUE)
plot(E.psi$forest, E.psi$predicted)
plot(E.psi$ele, E.psi$predicted)
predicted_df <- data.frame(predicted = E.psi$Predicted,lower = E.psi$lower, upper= E.psi$upper, (crossbill[,c("ele", "forest")]))
plot(predicted_df$ele, predicted_df$predicted)
plot(predicted_df$forest, predicted_df$predicted)
predicted_df <- data.frame(predicted = E.psi$Predicted,lower = E.psi$lower, upper= E.psi$upper, (crossbill[,c("ele", "forest")]))
plot(predicted_df$ele, predicted_df$predicted)
plot(predicted_df$forest, predicted_df$predicted)
nd <- data.frame (scale(crossbill[,c("ele", "forest")]))
E.psi <- predict(occu.m1, type="state", newdata=nd, appendData=TRUE)
plot(E.psi$forest, E.psi$predicted)
plot(E.psi$ele, E.psi$predicted)
# Load covariate data
Site_Covariates <- crossbill[,c("ele", "forest")]
obsCovs=list(date=crossbill[,c("date991", "date992", "date993")])
# Build a new unmarkedFramOccu
umf <- unmarkedFrameOccu(
y=Detection_History,
siteCovs=Site_Covariates,
obsCovs=obsCovs)
#sc <- scale(siteCovs(umf))
#siteCovs(umf) <- sc
head(umf)
summary(umf)
occu.m1 <- occu(formula = ~date # detection formula first
~forest + ele, # occupancy formula second,
data = umf)
# Summarize
summary(occu.m1)
nd <- data.frame (crossbill[,c("ele", "forest")])
E.psi <- predict(occu.m1, type="state", newdata=nd, appendData=TRUE)
plot(E.psi$forest, E.psi$predicted)
plot(E.psi$ele, E.psi$predicted)
nd <- data.frame (crossbill[,c("ele", "forest")])
E.psi <- predict(occu.m1, type="state", newdata=nd, appendData=TRUE)
predicted_df <- data.frame(predicted = E.psi$Predicted,lower = E.psi$lower, upper= E.psi$upper, (crossbill[,c("ele", "forest")]))
plot(predicted_df$ele, predicted_df$predicted)
plot(predicted_df$forest, predicted_df$predicted)
predicted_df <- data.frame(predicted = E.psi$Predicted,lower = E.psi$lower, upper= E.psi$upper, (crossbill[,c("ele", "forest")]))
plot(predicted_df$ele, predicted_df$predicted)
plot(predicted_df$forest, predicted_df$predicted)
p1 <- ggplot(predicted_df, aes(ele, predicted)) +
geom_point(alpha = 0.3, colour = "red")+
geom_smooth(span = 3)+
ggtitle("Species' Prefered Elevation") +
ylim(0, 1)+
xlab("Elevation (m)")+
ylab("Occupancy (pi)")
p2 <- ggplot(predicted_df, aes(forest, predicted)) +
geom_point(alpha = 0.3, colour = "red")+
geom_smooth(span = 1)+
ggtitle("Species' Prefered Forest Cover") +
ylim(0, 1)+
xlab("Percentage of Forest cover(%)")+
ylab("Occupancy (pi)")
grid.arrange(p1, p2)
# Load covariate data
Site_Covariates <- crossbill[,c("ele", "forest")]
obsCovs=list(date=crossbill[,c("date991", "date992", "date993")])
# Build a new unmarkedFramOccu
umf <- unmarkedFrameOccu(
y=Detection_History,
siteCovs=Site_Covariates,
obsCovs=obsCovs)
sc <- scale(siteCovs(umf))
siteCovs(umf) <- sc
head(umf)
summary(umf)
occu.m1 <- occu(formula = ~date # detection formula first
~forest + ele, # occupancy formula second,
data = umf)
# Summarize
summary(occu.m1)
nd <- data.frame (crossbill[,c("ele", "forest")])
E.psi <- predict(occu.m1, type="state", newdata=nd, appendData=TRUE)
plot(E.psi$forest, E.psi$predicted)
plot(E.psi$ele, E.psi$predicted)
nd <- data.frame (scale(crossbill[,c("ele", "forest")]))
E.psi <- predict(occu.m1, type="state", newdata=nd, appendData=TRUE)
plot(E.psi$forest, E.psi$predicted)
plot(E.psi$ele, E.psi$predicted)
predicted_df <- data.frame(predicted = E.psi$Predicted,lower = E.psi$lower, upper= E.psi$upper, (crossbill[,c("ele", "forest")]))
plot(predicted_df$ele, predicted_df$predicted)
plot(predicted_df$forest, predicted_df$predicted)
p1 <- ggplot(predicted_df, aes(ele, predicted)) +
geom_point(alpha = 0.3, colour = "red")+
geom_smooth(span = 3)+
ggtitle("Species' Prefered Elevation") +
ylim(0, 1)+
xlab("Elevation (m)")+
ylab("Occupancy (pi)")
p2 <- ggplot(predicted_df, aes(forest, predicted)) +
geom_point(alpha = 0.3, colour = "red")+
geom_smooth(span = 1)+
ggtitle("Species' Prefered Forest Cover") +
ylim(0, 1)+
xlab("Percentage of Forest cover(%)")+
ylab("Occupancy (pi)")
grid.arrange(p1, p2)
nd_forest <- data.frame(forest = seq(min(Site_Covariates$forest),
max(Site_Covariates$forest), by = 0.5),
ele = mean(Site_Covariates$ele)) # hold other variables constant
nd_ele <- data.frame(forest=mean(Site_Covariates$forest),
ele = seq(min(Site_Covariates$ele), max(Site_Covariates$ele), by = 0.5))
forest_predict <- predict(occu.m1, type="state", newdata=nd_forest, appendData=TRUE)
ele_predict <- predict(occu.m1, type="state", newdata=nd_ele, appendData=TRUE)
occu_forest_pred_df <- data.frame(Predicted = forest_predict$Predicted,
lower = forest_predict$lower,
upper = forest_predict$upper,
nd_forest)
# Plot the relationship
forest_plot <- ggplot(occu_forest_pred_df, aes(x = forest, y = Predicted)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, linetype = "dashed") +
geom_path(size = 1) +
labs(x = "Forest cover", y = "Occupancy probability") +
theme_classic() +
coord_cartesian(ylim = c(0,1)) +
theme(text = element_text(family = "HelveticaNeue", colour = "black"),
axis.text = element_text(colour = "black"))
forest_plot
View(occu_forest_pred_df)
Site_Covariates <- scale(Site_Covariates)
nd_forest <- data.frame(forest = seq(min(Site_Covariates$forest),
max(Site_Covariates$forest), by = 0.5),
ele = mean(Site_Covariates$ele)) # hold other variables constant
nd <- data.frame (scale(crossbill[,c("ele", "forest")]))
E.psi <- predict(occu.m1, type="state", newdata=nd, appendData=TRUE)
predicted_df <- data.frame(predicted = E.psi$Predicted,lower = E.psi$lower, upper= E.psi$upper, (crossbill[,c("ele", "forest")]))
plot(predicted_df$ele, predicted_df$predicted)
plot(predicted_df$forest, predicted_df$predicted)
p1 <- ggplot(predicted_df, aes(ele, predicted)) +
geom_point(alpha = 0.3, colour = "red")+
geom_smooth(span = 3)+
ggtitle("Species' Prefered Elevation") +
ylim(0, 1)+
xlab("Elevation (m)")+
ylab("Occupancy (pi)")
p2 <- ggplot(predicted_df, aes(forest, predicted)) +
geom_point(alpha = 0.3, colour = "red")+
geom_smooth(span = 1)+
ggtitle("Species' Prefered Forest Cover") +
ylim(0, 1)+
xlab("Percentage of Forest cover(%)")+
ylab("Occupancy (pi)")
grid.arrange(p1, p2)
library(raster)
elevation <- rasterFromXYZ(Switzerland[,c("x","y","elevation")],
crs="+proj=somerc +lat_0=46.95240555555556 +lon_0=7.439583333333333 +k_0=1 +x_0=600000 +y_0=200000 +ellps=bessel +towgs84=674.374,15.056,405.346,0,0,0,0 +units=m +no_defs")
forest <- rasterFromXYZ(Switzerland[,c("x","y","forest")],
crs="+proj=somerc +lat_0=46.95240555555556 +lon_0=7.439583333333333 +k_0=1 +x_0=600000 +y_0=200000 +ellps=bessel +towgs84=674.374,15.056,405.346,0,0,0,0 +units=m +no_defs")
attr(sc, "scaled:center")
attr(sc, "scaled:scale")
ele.s <- (elevation-1189)/640
forest.s <- (forest-34.7)/27.7
ef <- stack(ele.s, forest.s)
names(ef) <- c("ele", "forest")
plot(ef, col=terrain.colors(100))
(beta <- coef(fm.occu, type="state"))
attr(sc, "scaled:center")
attr(sc, "scaled:scale")
unscaled_data_ele <- E.psi$ele * (640.71471) + 1189.32584
unscaled_data_ele <- E.psi$ele * 640.71471 + 1189.32584
unscaled_data_forest <- E.psi$forest * 27.67431 + 34.74532
unscaled_data_ele <- E.psi$ele * 640.71471 + 1189.32584
unscaled_data_forest <- E.psi$forest * 27.67431 + 34.74532
nd <- data.frame (scale(crossbill[,c("ele", "forest")]))
E.psi <- predict(occu.m1, type="state", newdata=nd, appendData=TRUE)
predicted_df <- data.frame(predicted = E.psi$Predicted,lower = E.psi$lower, upper= E.psi$upper, ele = unscaled_data_ele, forest = unscaled_data_forest)
plot(predicted_df$ele, predicted_df$predicted)
plot(predicted_df$forest, predicted_df$predicted)
nd <- data.frame (scale(crossbill[,c("ele", "forest")]))
E.psi <- predict(occu.m1, type="state", newdata=nd, appendData=TRUE)
unscaled_data_ele <- E.psi$ele * 640.71471 + 1189.32584
unscaled_data_forest <- E.psi$forest * 27.67431 + 34.74532
p1 <- ggplot(predicted_df, aes(ele, predicted)) +
geom_point(alpha = 0.3, colour = "red")+
geom_smooth(span = 3)+
ggtitle("Species' Prefered Elevation") +
ylim(0, 1)+
xlab("Elevation (m)")+
ylab("Occupancy (pi)")
p2 <- ggplot(predicted_df, aes(forest, predicted)) +
geom_point(alpha = 0.3, colour = "red")+
geom_smooth(span = 1)+
ggtitle("Species' Prefered Forest Cover") +
ylim(0, 1)+
xlab("Percentage of Forest cover(%)")+
ylab("Occupancy (pi)")
grid.arrange(p1, p2)
(beta <- coef(fm.occu, type="state"))
(beta <- coef(occu.m1, type="state"))
logit.psi <- beta[1] + beta[2]*ele.s + beta[3]*ele.s^2 + beta[4]*forest.s
psi <- exp(logit.psi) / (1 + exp(logit.psi))
print(spplot(psi, col.regions=terrain.colors(100)))
(beta <- coef(occu.m1, type="state"))
logit.psi <- beta[1] + beta[2]*forest + beta[3]*ele
logit.psi <- beta[1] + beta[2]*forest.s + beta[3]*ele.s
psi <- exp(logit.psi) / (1 + exp(logit.psi))
print(spplot(psi, col.regions=terrain.colors(100)))
E.psi <- predict(fm.occu, type="state", newdata=ef)
E.psi <- predict(occu.m1, type="state", newdata=ef)
plot(E.psi, axes=FALSE, col=terrain.colors(100))
E.psi <- predict(occu.m1, type="det", newdata=nd, appendData=TRUE)
E.psi
logit.psi <- beta[1] + beta[2]*forest.s + beta[3]*ele.s
psi <- exp(logit.psi) / (1 + exp(logit.psi))
print(spplot(psi, col.regions=terrain.colors(100)))
E.psi <- predict(occu.m1, type="state", newdata=ef)
plot(E.psi, axes=FALSE, col=terrain.colors(100))
knitr::opts_chunk$set(echo = TRUE)
library(unmarked)
library(here)
library(dplyr)
library(magrittr)
library(ggplot2)
library(gridExtra)
library(raster)
library(unmarked)
library(here)
library(dplyr)
library(magrittr)
library(ggplot2)
library(gridExtra)
library(raster)
data(crossbill)
# Examine the data
head(crossbill)
Detection_History <- as.matrix(crossbill[,c("det991", "det992", "det993")])
Site_Covariates <- crossbill[,c("ele", "forest")]
obsCovs=list(date=crossbill[,c("date991", "date992", "date993")])
umf <- unmarkedFrameOccu(
y=Detection_History)
head(umf)
summary(umf)
# Build basic single-season occupancy model with intercepts only (one estimate for detection, one for occupancy)
occu.m1 <- occu(formula = ~1 # detection formula first
~1, # occupancy formula second,
data = umf)
summary(occu.m1) # Show AIC, estimates (on logit scale), SE, z-scores
# To get real estimate of occupancy (with 95% CI)
predict(occu.m1,
newdata = data.frame(site =1),
type = "state")
# Equivalent to inverse logit
boot::inv.logit(coef(occu.m1)[1]) # Real estimate of occupancy
boot::inv.logit(coef(occu.m1)[2]) # Real estimate of detection
# Load covariate data
Site_Covariates <- crossbill[,c("ele", "forest")]
obsCovs=list(date=crossbill[,c("date991", "date992", "date993")])
# Build a new unmarkedFramOccu
umf <- unmarkedFrameOccu(
y=Detection_History,
siteCovs=Site_Covariates,
obsCovs=obsCovs)
sc <- scale(siteCovs(umf))
siteCovs(umf) <- sc
head(umf)
summary(umf)
occu.m2 <- occu(formula = ~date # detection formula first
~forest + ele, # occupancy formula second,
data = umf)
# Summarize
summary(occu.m2)
nd <- data.frame (scale(crossbill[,c("ele", "forest")]))
E.psi <- predict(occu.m2, type="state", newdata=nd, appendData=TRUE)
E.psi
attr(sc, "scaled:center")
attr(sc, "scaled:scale")
unscaled_data_ele <- E.psi$ele * 640.71471 + 1189.32584
unscaled_data_forest <- E.psi$forest * 27.67431 + 34.74532
predicted_df <- data.frame(predicted = E.psi$Predicted,lower = E.psi$lower, upper= E.psi$upper, ele = unscaled_data_ele, forest = unscaled_data_forest)
plot(predicted_df$ele, predicted_df$predicted)
plot(predicted_df$forest, predicted_df$predicted)
p1 <- ggplot(predicted_df, aes(ele, predicted)) +
geom_point(alpha = 0.3, colour = "red")+
geom_smooth(span = 3)+
ggtitle("Species' Prefered Elevation") +
ylim(0, 1)+
xlab("Elevation (m)")+
ylab("Occupancy (pi)")
p2 <- ggplot(predicted_df, aes(forest, predicted)) +
geom_point(alpha = 0.3, colour = "red")+
geom_smooth(span = 1)+
ggtitle("Species' Prefered Forest Cover") +
ylim(0, 1)+
xlab("Percentage of Forest cover(%)")+
ylab("Occupancy (pi)")
grid.arrange(p1, p2)
p1
p2
p1 <- ggplot(predicted_df, aes(ele, predicted)) +
geom_point(alpha = 0.3, colour = "red")+
geom_smooth(span = 3)+
ggtitle("Species' Prefered Elevation") +
ylim(0, 1)+
xlab("Elevation (m)")+
ylab("Occupancy (pi)")
p2 <- ggplot(predicted_df, aes(forest, predicted)) +
geom_point(alpha = 0.3, colour = "red")+
geom_smooth(span = 1)+
ggtitle("Species' Prefered Forest Cover") +
ylim(0, 1)+
xlab("Percentage of Forest cover(%)")+
ylab("Occupancy (pi)")
p1
p2
library(lattice)
data(Switzerland)
print(levelplot(elevation ~ x + y, Switzerland, aspect="iso",
xlab="Easting (m)", ylab="Northing (m)",
col.regions=terrain.colors(100)))
elevation <- rasterFromXYZ(Switzerland[,c("x","y","elevation")],
crs="+proj=somerc +lat_0=46.95240555555556 +lon_0=7.439583333333333 +k_0=1 +x_0=600000 +y_0=200000 +ellps=bessel +towgs84=674.374,15.056,405.346,0,0,0,0 +units=m +no_defs")
forest <- rasterFromXYZ(Switzerland[,c("x","y","forest")],
crs="+proj=somerc +lat_0=46.95240555555556 +lon_0=7.439583333333333 +k_0=1 +x_0=600000 +y_0=200000 +ellps=bessel +towgs84=674.374,15.056,405.346,0,0,0,0 +units=m +no_defs")
attr(sc, "scaled:center")
attr(sc, "scaled:scale")
ele.s <- (elevation-1189)/640
forest.s <- (forest-34.7)/27.7
ef <- stack(ele.s, forest.s)
names(ef) <- c("ele", "forest")
plot(ef, col=terrain.colors(100))
(beta <- coef(occu.m1, type="state"))
logit.psi <- beta[1] + beta[2]*forest.s + beta[3]*ele.s
psi <- exp(logit.psi) / (1 + exp(logit.psi))
print(spplot(psi, col.regions=terrain.colors(100)))
(beta <- coef(occu.m2, type="state"))
logit.psi <- beta[1] + beta[2]*forest.s + beta[3]*ele.s
psi <- exp(logit.psi) / (1 + exp(logit.psi))
print(spplot(psi, col.regions=terrain.colors(100)))
E.psi <- predict(occu.m1, type="state", newdata=ef)
plot(E.psi, axes=FALSE, col=terrain.colors(100))
E.psi <- predict(occu.m2, type="state", newdata=ef)
plot(E.psi, axes=FALSE, col=terrain.colors(100))
nd <- data.frame (scale(crossbill[,c("ele", "forest")]))
E.psi <- predict(occu.m2, type="state", newdata=nd, appendData=TRUE)
p1 <- ggplot(predicted_df, aes(ele, predicted)) +
geom_point(alpha = 0.3, colour = "red")+
geom_smooth(span = 3)+
ggtitle("Species' Prefered Elevation") +
ylim(0, 1)+
xlab("Elevation (m)")+
ylab("Occupancy (pi)")
p2 <- ggplot(predicted_df, aes(forest, predicted)) +
geom_point(alpha = 0.3, colour = "red")+
geom_smooth(span = 1)+
ggtitle("Species' Prefered Forest Cover") +
ylim(0, 1)+
xlab("Percentage of Forest cover(%)")+
ylab("Occupancy (pi)")
p1
p2
p1 <- ggplot(predicted_df, aes(ele, predicted)) +
geom_point(alpha = 0.3, colour = "red")+
geom_smooth(span = 3)+
ggtitle("Species' Prefered Elevation") +
ylim(0, 1)+
xlab("Elevation (m)")+
ylab("Occupancy (pi)")
p2 <- ggplot(predicted_df, aes(forest, predicted)) +
geom_point(alpha = 0.3, colour = "red")+
geom_smooth(span = 1)+
ggtitle("Species' Prefered Forest Cover") +
ylim(0, 1)+
xlab("Percentage of Forest cover(%)")+
ylab("Occupancy (pi)")
p1
p2
p1 <- ggplot(predicted_df, aes(ele, predicted)) +
geom_point(alpha = 0.3, colour = "red")+
geom_smooth(span = 10)+
ggtitle("Species' Prefered Elevation") +
ylim(0, 1)+
xlab("Elevation (m)")+
ylab("Occupancy (pi)")
p2 <- ggplot(predicted_df, aes(forest, predicted)) +
geom_point(alpha = 0.3, colour = "red")+
geom_smooth(span = 1)+
ggtitle("Species' Prefered Forest Cover") +
ylim(0, 1)+
xlab("Percentage of Forest cover(%)")+
ylab("Occupancy (pi)")
p1
p2
p1 <- ggplot(predicted_df, aes(ele, predicted)) +
geom_point(alpha = 0.3, colour = "red")+
geom_smooth(span = 0.5)+
ggtitle("Species' Prefered Elevation") +
ylim(0, 1)+
xlab("Elevation (m)")+
ylab("Occupancy (pi)")
p2 <- ggplot(predicted_df, aes(forest, predicted)) +
geom_point(alpha = 0.3, colour = "red")+
geom_smooth(span = 1)+
ggtitle("Species' Prefered Forest Cover") +
ylim(0, 1)+
xlab("Percentage of Forest cover(%)")+
ylab("Occupancy (pi)")
p1
p2
p1 <- ggplot(predicted_df, aes(ele, predicted)) +
geom_point(alpha = 0.3, colour = "red")+
geom_smooth(span = 0.5)+
ggtitle("Species' Prefered Elevation") +
ylim(0, 1)+
xlab("Elevation (m)")+
ylab("Occupancy (pi)")
p2 <- ggplot(predicted_df, aes(forest, predicted)) +
geom_point(alpha = 0.3, colour = "red")+
geom_smooth(span = 0.5)+
ggtitle("Species' Prefered Forest Cover") +
ylim(0, 1)+
xlab("Percentage of Forest cover(%)")+
ylab("Occupancy (pi)")
p1
p2
p1 <- ggplot(predicted_df, aes(ele, predicted)) +
geom_point(alpha = 0.3, colour = "red")+
geom_smooth(span = 1)+
ggtitle("Species' Prefered Elevation") +
ylim(0, 1)+
xlab("Elevation (m)")+
ylab("Occupancy (pi)")
p2 <- ggplot(predicted_df, aes(forest, predicted)) +
geom_point(alpha = 0.3, colour = "red")+
geom_smooth(span = 1)+
ggtitle("Species' Prefered Forest Cover") +
ylim(0, 1)+
xlab("Percentage of Forest cover(%)")+
ylab("Occupancy (pi)")
p1
p2
library(lattice)
data(Switzerland)
print(levelplot(elevation ~ x + y, Switzerland, aspect="iso",
xlab="Easting (m)", ylab="Northing (m)",
col.regions=terrain.colors(100)))
elevation <- rasterFromXYZ(Switzerland[,c("x","y","elevation")],
crs="+proj=somerc +lat_0=46.95240555555556 +lon_0=7.439583333333333 +k_0=1 +x_0=600000 +y_0=200000 +ellps=bessel +towgs84=674.374,15.056,405.346,0,0,0,0 +units=m +no_defs")
forest <- rasterFromXYZ(Switzerland[,c("x","y","forest")],
crs="+proj=somerc +lat_0=46.95240555555556 +lon_0=7.439583333333333 +k_0=1 +x_0=600000 +y_0=200000 +ellps=bessel +towgs84=674.374,15.056,405.346,0,0,0,0 +units=m +no_defs")
